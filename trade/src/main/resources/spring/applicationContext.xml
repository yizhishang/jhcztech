<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">
    
    <!-- 配置连接池 -->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    
	<context:component-scan base-package="com.jhcz.trade" />

	<context:annotation-config />

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<tx:annotation-driven transaction-manager="transactionManager" />
   
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc_user.user}" />
		<property name="password" value="${jdbc_password.password}" />
		<!-- <property name="initialSize" value="${dbcp.initialSize}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="defaultAutoCommit" value="${dbcp.defaultAutoCommit}" />
		<property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${dbcp.logAbandoned}" />
		<property name="testOnBorrow" value="${dbcp.testOnBorrow}"/>
		<property name="validationQuery" value="${dbcp.validationQuery}"/> -->
	</bean>
    <!-- 事物管理配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 		<property name="dataSource" ref="dataSource"></property>
 	</bean>
 	
 	
 	<bean id="pagePlugin" class="com.jhcz.trade.framework.plugin.mybatis.PagePlugin">
		<property name="properties">
			<props>
			 	<!-- 指定数据库分页方言Dialect -->
				<prop key="dialect">com.jhcz.trade.framework.plugin.dialet.OracleDialect</prop>
				<prop key="pageSqlId">.*query.*</prop>
			</props>
		</property>
	</bean>
 	    <!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"></property>
		<property name="plugins">
            <ref bean="pagePlugin"/>
        </property>  
		<!-- mapper配置路径 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:mybatis/*-mapper.xml</value>
			</list>
		</property>
		
	</bean>
	     
   <!--  <bean id="pagePlugin" class="com.tcloud.ptwop.plugin.mybatis.PagePlugin">
		<property name="properties">
			<props>
			 	指定数据库分页方言Dialect
				<prop key="dialect">com.tcloud.ptwop.plugin.jdbc.dialet.MySQLDialect</prop>
				<prop key="pageSqlId">.*query.*</prop>
			</props>
		</property>
	</bean> -->
	<!-- ,com.tcloud.ptwop.business.admin.*.dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jhcz.trade.*.dao,com.jhcz.trade.*.*.dao"/>
		<!-- <property name="basePackage" value="com.tcloud.ptwop.business.*"/> -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	 <bean id="springContextHolder" class="com.jhcz.trade.framework.init.SpringContextHolder"/>
</beans>