<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<!-- 阿里 druid 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="filters" value="${filters}" />

		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${maxActive}" />

		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />

		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${minIdle}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" />

		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />

		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />

		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}" />
	</bean>

	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
		<!--destroy-method="close">-->
		<!--<property name="driverClassName" value="${driverClassName}" />-->
		<!--<property name="url" value="${url}" />-->
		<!--<property name="username" value="${username}" />-->
		<!--<property name="password" value="${password}" />-->
		<!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
		<!--<property name="initialSize" value="${initialSize}"></property>-->
		<!--&lt;!&ndash; 连接池最大数量 &ndash;&gt;-->
		<!--<property name="maxActive" value="${maxActive}"></property>-->
		<!--&lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
		<!--<property name="maxIdle" value="${maxIdle}"></property>-->
		<!--&lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
		<!--<property name="minIdle" value="${minIdle}"></property>-->
		<!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
		<!--<property name="maxWait" value="${maxWait}"></property>-->
	<!--</bean>-->

	<bean id="sqlUtilConfig" class="com.github.pagehelper.SqlUtilConfig">
		<property name="dialect" value="oracle"/>
		<!-- 该参数默认为false -->
		<!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
		<!-- 和startPage中的pageNum效果一样-->
		<property name="offsetAsPageNum" value="true"/>
		<!-- 该参数默认为false -->
		<!-- 设置为true时，使用RowBounds分页会进行count查询 -->
		<property name="rowBoundsWithCount" value="true"/>
		<!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
		<!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
		<property name="pageSizeZero" value="true"/>
		<!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
		<!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
		<!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
		<property name="reasonable" value="false"/>
		<!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
		<!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
		<!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
		<!-- 不理解该含义的前提下，不要随便复制该配置 -->
		<property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;"/>
		<!-- 支持通过Mapper接口参数来传递分页参数 -->
		<property name="supportMethodsArguments" value="false"/>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapping/**/*.xml"></property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>dialect=oracle</value>
					</property>
			        <property name="sqlUtilConfig" ref="sqlUtilConfig"/>
				</bean>
			</array>
		</property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jhcz" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>